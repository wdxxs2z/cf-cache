#!/bin/bash -e

RUN_DIR=/var/vcap/sys/run/receptor
LOG_DIR=/var/vcap/sys/log/receptor
CONF_DIR=/var/vcap/jobs/receptor/config
PIDFILE=$RUN_DIR/receptor.pid
DATA_DIR=/var/vcap/data/receptor
TMP_DIR=$DATA_DIR/tmp

source /var/vcap/packages/pid_utils/pid_utils.sh

bbs_sec_flags=" \
   -bbsClientCert=${CONF_DIR}/certs/bbs/client.crt \
   -bbsClientKey=${CONF_DIR}/certs/bbs/client.key \
   -bbsCACert=${CONF_DIR}/certs/bbs/ca.crt"

bbs_api_url="https://bbs.service.cf.internal:8889"


case $1 in

  start)

    pid_guard $PIDFILE "receptor"

    mkdir -p $RUN_DIR
    chown -R vcap:vcap $RUN_DIR

    mkdir -p $LOG_DIR
    chown -R vcap:vcap $LOG_DIR

    mkdir -p $DATA_DIR
    chown -R vcap:vcap $DATA_DIR

    mkdir -p $TMP_DIR
    chown -R vcap:vcap $TMP_DIR

    echo $$ > $PIDFILE

    if running_in_container; then
        echo "Not setting /proc/sys/net/ipv4 parameters, since I'm running inside a linux container"
    else
        # TCP_FIN_TIMEOUT
        # This setting determines the time that must elapse before TCP/IP can release a closed connection and reuse
        # its resources. During this TIME_WAIT state, reopening the connection to the client costs less than establishing
        # a new connection. By reducing the value of this entry, TCP/IP can release closed connections faster, making more
        # resources available for new connections. Addjust this in the presense of many connections sitting in the
        # TIME_WAIT state:

        echo 10 > /proc/sys/net/ipv4/tcp_fin_timeout

        # TCP_TW_REUSE
        # This allows reusing sockets in TIME_WAIT state for new connections when it is safe from protocol viewpoint.
        # Default value is 0 (disabled). It is generally a safer alternative to tcp_tw_recycle

        echo 1 > /proc/sys/net/ipv4/tcp_tw_reuse
    fi

    # Allowed number of open file descriptors
    ulimit -n 100000

    exec chpst -u vcap:vcap /var/vcap/packages/receptor/bin/receptor ${bbs_sec_flags} \
      -address=0.0.0.0:8887 \
      -bbsAddress=${bbs_api_url} \
      -debugAddr=0.0.0.0:17019 \
      -consulCluster=http://127.0.0.1:8500 \
      -username= \
      -password= \
      -registerWithRouter=true \
      -domainNames=receptor.qzc.pcf \
      -natsAddresses=10.10.130.103:4222 \
      -natsUsername=nats \
      -natsPassword=b6945a6105c1cf5ce66b \
      -corsEnabled=false \
      -logLevel=debug \
      2> >(tee -a $LOG_DIR/receptor.stderr.log | logger -p user.error -t vcap.receptor) \
      1> >(tee -a $LOG_DIR/receptor.stdout.log | logger -p user.info -t vcap.receptor)

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: receptor_ctl {start|stop}"

    ;;

esac
